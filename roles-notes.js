[{"content":"## Welcome to RTLBook\n\nThis is an interactive coding environment where you can explore the following libraries:\n\n| Name      | Docs |\n| ----------- | ----------- |\n| React      | [docs](https://reactjs.org/)       |\n| @testing-library/react   |  [docs](https://testing-library.com/docs/react-testing-library/intro/)        |\n| @testing-library/user-event |   [docs](https://testing-library.com/docs/user-event/intro)  |\n| @testing-library/react-hooks |  [docs](https://github.com/testing-library/react-hooks-testing-library)  |\n| @testing-library/jest-dom | [docs](https://github.com/testing-library/jest-dom#custom-matchers) |\n| expect |  [docs](https://jestjs.io/docs/expect)  |\n\nIn between each 'cell' there are buttons that can add in a new code editor or a text section.","type":"text","id":"12frm"},{"content":"import { render, screen } from '@testing-library/react';\nfunction RoleExample() {\n  return (\n    <div>\n      <a href=\"/\">Link</a>\n      <button>Button</button>\n      <footer>Contentinfo</footer>\n      <h1>Heading</h1>\n      <header>Banner</header>\n      <img alt=\"description\" /> Img\n      <input type=\"checkbox\" /> Checkbox\n      <input type=\"number\" /> Spinbutton\n      <input type=\"radio\" /> Radio\n      <input type=\"text\" /> Textbox\n      <li>ListItem</li>\n      <ul>Listgroup</ul>\n    </div>\n  );\n}\nrender(<RoleExample />);","type":"code","id":"dczj5"},{"content":"test('can find elements by role',()=>{\r\n  render(<RoleExample />);\r\n  const roles = [\r\n    'link',\r\n    'button',\r\n    'contentinfo',\r\n    'heading',\r\n    'banner',\r\n    'img',\r\n    'checkbox',\r\n    'spinbutton',\r\n    'radio',\r\n    'textbox',\r\n    'listitem',\r\n    'list'\r\n  ];\r\n  for (let role of roles){\r\n    const el = screen.getByRole(role);\r\n    expect(el).toBeInTheDocument();\r\n  }\r\n})","type":"code","id":"vlaac"},{"content":"function AccessibleName(){\r\n  return(\r\n    <div>\r\n    <button>Submit</button>\r\n    <button>Cancel</button>\r\n    </div>\r\n  );\r\n}\r\nrender(<AccessibleName/>);","type":"code","id":"ytpdu"},{"content":"test('can select by accessible name', () => {\n  render(<AccessibleName />);\n  const submitButton = screen.getByRole('button', {\n    name: /submit/i,\n  });\n  const cancelButton = screen.getByRole('button', {\n    name: /cancel/i,\n  });\n  expect(submitButton).toBeInTheDocument();\n  expect(cancelButton).toBeInTheDocument();\n});","type":"code","id":"vofq1"},{"content":"function MoreNames() {\n  return (\n    <div>\n      <label htmlFor=\"email\">Email</label>\n      <input id=\"email\" />\n      <label htmlFor=\"search\">Search</label>\n      <input id=\"search\" />\n    </div>\n  );\n}\nrender(<MoreNames />);","type":"code","id":"lh5q9"},{"content":"test('make sure two inputs rendered', () => {\n  render(<MoreNames />);\n  const emailInput = screen.getByRole('textbox', {\n    name: /email/i,\n  });\n  const searchInput = screen.getByRole('textbox', {\n    name: /search/i,\n  });\n  expect(emailInput).toBeInTheDocuemnt();\n  expect(searchInput).toBeInTheDocuemnt();\n});","type":"code","id":"4tsmw"}]